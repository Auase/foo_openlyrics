name: release
on: [push]

jobs:
  build-release:
    name: Build Release
    runs-on: windows-latest

    steps:
    - name: Print installed Windows SDK versions
      shell: powershell
      continue-on-error: true
      run: |
        Get-Item "HKLM:\SOFTWARE\Microsoft\Windows Kits\Installed Roots"
        Get-ChildItem -Name "HKLM:\SOFTWARE\Microsoft\Windows Kits\Installed Roots"

    - name: Add MSBuild to the PATH
      uses: microsoft/setup-msbuild@v1
      with:
        vs-version: '[16.0, 17.0)'

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure libxml2 build
      run: 3rdparty\libxml2-2.9.10\win32\configure.bat

    - name: Build binary
      working-directory: ${{ env.GITHUB_WORKSPACE }}
      run: msbuild /m /p:Configuration=Release /p:Platform=x86 /p:WindowsTargetPlatformVersion=10.0.16299.0 ./build/vs2017/foo_openlyrics.sln

    - name: Pack binary into archive
      shell: bash
      run: |
        release_version="0.0"
        archivename="foo_openlyrics-${release_version}.fb2k-component"
        7z a "${archivename}" ./build/vs2017/Release/foo_openlyrics.dll
        echo "BINARY_PATH=${archivename}" >> $GITHUB_ENV

    - name: Create GitHub release
      id: release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release-test
        release_name: release-test
        draft: true
        prerelease: true

    - name: Upload release archive
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: ${{ env.BINARY_PATH }}
        asset_name: ${{ env.BINARY_PATH }}
        asset_content_type: application/octet-stream

