name: release
on:
  push:
    tags:
    - '*'

jobs:
  build-release:
    name: Build Release
    runs-on: windows-latest

    steps:
    - name: Print installed Windows SDK versions
      shell: pwsh
      continue-on-error: true
      run: Get-ChildItem -Name "HKLM:\SOFTWARE\Microsoft\Windows Kits\Installed Roots"

    - name: Add MSBuild to the PATH
      uses: microsoft/setup-msbuild@v1
      with:
        vs-version: '[16.0, 17.0)'

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure libxml2 build
      run: 3rdparty\libxml2-2.9.10\win32\configure.bat

    - name: Build binary
      run: msbuild /m /p:Configuration=Release /p:Platform=x86 build\vs2017\foo_openlyrics.sln

    - name: Pack binary into archive
      shell: bash
      run: |
        release_version="${GITHUB_REF#refs/tags/}"
        echo "version is: $release_version"
        release_notes=`git tag -l --format="%(contents)" ${release_version}`
        release_name="foo_openlyrics-${release_version}"
        7z a "${release_name}.fb2k-component" ".\build\vs2017\Release\foo_openlyrics.dll"
        7z a "${release_name}-with_debug_symbols.zip" ".\build\vs2017\Release\foo_openlyrics.dll" ".\build\vs2017\Release\foo_openlyrics.pdb"
        echo "ARCHIVE_NAME=${archivename}" >> $GITHUB_ENV
        echo "RELEASE_NOTES=${release_notes}" >> $GITHUB_ENV

    - name: Create GitHub release
      id: release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        body: ${{ env.RELEASE_NOTES }}
        artifacts: ${{ env.ARCHIVE_NAME }}.fb2k-component,${{ env.ARCHIVE_NAME }}-with_debug_symbols.zip
        draft: true
