name: release
on: [push]

jobs:
  build-release:
    name: Build Release
    runs-on: windows-latest

    steps:
    - name: Create GitHub release
      id: release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release-test
        release_name: release-test
        prerelease: true

    - name: Set release upload URL and release version
      shell: bash
      run: |
        release_upload_url="${{ steps.release.outputs.upload_url }}"
        echo "::set-env name=RELEASE_UPLOAD_URL::$release_upload_url"
        echo "release upload url: "$RELEASE_UPLOAD_URL
        release_version="0.0"
        echo "::set-env name=RELEASE_VERSION::$release_version"
        echo "release version: "$RELEASE_VERSION

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Add MSBuild to the PATH
      uses: microsoft/setup-msbuild@v1

    - name: Build binary
      working-directory: ${{ env.GITHUB_WORKSPACE }}
      run: msbuild /m /p:Configuration=Release /p:Platform=x86 ./build/vs2017/foo_openlyrics.sln

    - name: Pack binary into archive
      shell: bash
      run: |
        archivename="foo_openlyrics-${{ env.RELEASE_VERSION }}.fb2k-component"
        7z a "${archivename}" ./build/vs2017/Release/foo_openlyrics.dll
        echo "::set-env name=ASSET::${archivename}"

    - name: Upload release archive
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ env.RELEASE_UPLOAD_URL }}
        asset_path: ${{ env.ASSET }}
        asset_name: ${{ env.ASSET }}
        asset_content_type: application/octet-stream

